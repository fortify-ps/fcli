plugins {
	id('com.github.jk1.dependency-license-report') version '1.16'
	id "org.kordamp.gradle.markdown" version "2.2.0"
	id("com.github.johnrengelman.shadow") version "7.0.0"
	id("io.micronaut.application") version "2.0.6" apply false
	id("io.micronaut.library") version "2.0.6" apply false
	id 'eclipse'
}

version = "0.1"
group = "com.fortify.cli"

apply plugin: "io.micronaut.application"
subprojects {
	apply plugin: "io.micronaut.library"
	apply plugin: 'eclipse'
}

application {
	mainClass.set("com.fortify.cli.FortifyCLI")
}
shadowJar {
   archiveBaseName.set('fcli')
   archiveClassifier.set('')
   archiveVersion.set('')
}

allprojects {
	java {
		sourceCompatibility = JavaVersion.toVersion("11")
		targetCompatibility = JavaVersion.toVersion("11")
	}
	micronaut {
		testRuntime("junit5")
		processing {
			incremental(true)
			annotations("com.fortify.cli.*")
		}
	}
	
	repositories {
		mavenCentral()
	}

	dependencies {
		// Lombok dependency & annotation processor
		compileOnly 'org.projectlombok:lombok:1.16.20'
		annotationProcessor "org.projectlombok:lombok:1.16.20"
		
		// Picocli dependency and annotation processor
		annotationProcessor("info.picocli:picocli-codegen")
		implementation("info.picocli:picocli")
		
		annotationProcessor("io.micronaut:micronaut-inject-java")
		annotationProcessor("io.micronaut:micronaut-graal")
		
		// Micronaut dependencies
		implementation("io.micronaut:micronaut-runtime")
		implementation("io.micronaut.picocli:micronaut-picocli")
		implementation("javax.annotation:javax.annotation-api")
		
		implementation('com.konghq:unirest-java:3.13.0') {
			exclude group: 'com.google.code.gson', module: 'gson' // We use Jackson, so no need for Gson
		}
		implementation('com.konghq:unirest-objectmapper-jackson:3.13.0')
	}
}
configure(allprojects.findAll {it.name != 'fcli-common'}) {
    dependencies {
		implementation project(':fcli-common')
	}
}

dependencies {
	runtimeOnly project(':fcli-ssc')
	runtimeOnly project(':fcli-fod')
	runtimeOnly project(':fcli-sast')
	runtimeOnly project(':fcli-dast')
	runtimeOnly project(':fcli-run')
	
	// Logging dependencies
	runtimeOnly("ch.qos.logback:logback-classic:1.2.6")
	runtimeOnly("org.slf4j:jcl-over-slf4j:1.7.32")
	
	// GraalVM dependency
	compileOnly("org.graalvm.nativeimage:svm")
}

ext {
	gradleHelpersLocation = "https://raw.githubusercontent.com/fortify-ps/gradle-helpers/1.6"
	thirdPartyBaseName = "${rootProject.name}"
}
apply from: "${gradleHelpersLocation}/thirdparty-helper.gradle"
apply from: "${gradleHelpersLocation}/readme2html.gradle"

task dist(type: Copy) {
	dependsOn 'build', 'readme2html'
	from "${buildDir}/html"
	from("${projectDir}") {
		include "config/**/*"
		include "LICENSE.TXT"
	}
	from("${buildDir}/${libsDirName}") {
		include "${rootProject.name}.jar"
	}
	into "$buildDir/dist"
}
